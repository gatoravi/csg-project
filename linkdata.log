1                                                          The SAS System                           10:29 Tuesday, February 14, 2017

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

WARNING: Unable to copy SASUSER registry to WORK registry. Because of this, you will not see registry customizations during this 
         session.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M2) 
      Licensed to WASHINGTON UNIVERSITY IN ST LOUIS - T&R, Site 70090255.
NOTE: This session is executing on the Linux 2.6.32-504.16.2.el6.x86_64 (LIN X64) platform.



NOTE: Updated analytical products:
      
      SAS/STAT 13.2
      SAS/ETS 13.2
      SAS/OR 13.2
      SAS/IML 13.2
      SAS/QC 13.2

NOTE: Additional host information:

 Linux LIN X64 2.6.32-504.16.2.el6.x86_64 #1 SMP Tue Mar 10 17:01:00 EDT 2015 x86_64 Red Hat Enterprise Linux Server release 6.6 
      (Santiago) 

You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.11 seconds
      cpu time            0.03 seconds
      
1          *-------------------------------------------------------------;
2          * Generate Linkage Term Project Problem for 621 Comp Stat Gen ;
3          * Author: M.A. Province 2005 (enhanced 2010)                  ;
4          *-------------------------------------------------------------;
5          
6          options mprint mtrace;
7          title 'MLE Parametric Linkage Data';
8          
9          
2                                                          The SAS System                           10:29 Tuesday, February 14, 2017

10         ****************************************************************;
11         * Specify parameters                                           *;
12         ****************************************************************;
13         *-----------------------------;
14         * Starting seed for simulation;
15         *-----------------------------;
16         %let seed=12345;
17         
18         *-----------------------------------------------;
19         * # Families (assume nuclear: F, M, C1, ..., Cm);
20         * # Kids/family                                 ;
21         *-----------------------------------------------;
22         %let nfams=100;
23         %let mkids=0;
24         
25         *--------------------------------------;
26         * Disease Gene (Latent)                ;
27         * Allele Frequency (assume BI-alllelic);
28         *--------------------------------------;
29         %let dq=0.4;
30         
31         *----------------------;
32         * Penetrance           ;
33         * Three genotypic means;
34         *----------------------;
35         %let mudaa=-0.6;
36         %let mudab=0.0;
37         %let mudbb=0.8;
38         
39         *----------------;
40         * Common variance;
41         *----------------;
42         %let de=0.1;
43         
44         *---------------------------------------;
45         * Linkage Marker (Observed)             ;
46         *   Number of Alleles for Linkage Marker;
47         *---------------------------------------;
48         %let lalleles=6;
49         
50         *------------------------------------------------------------------------------------------------------;
51         *Recombination fraction between Disease gene and Linkage Marker gene: 0=completely linked, 1/2=unlinked;
52         *------------------------------------------------------------------------------------------------------;
53         %let theta=0.1;
54         
55         ****************************************************************;
56         * Done specifying parameters                                   *;
57         ****************************************************************;
58         
59         
60         *----------------------------------------------------------------------------;
61         * Calculate Marker Allele Frequencies (assume all equal) from input # alleles;
62         *----------------------------------------------------------------------------;
63         data _null_;
64           lafreq=(1/&lalleles);
65           length lqs $200;
66           lqs=trim(left(lafreq))||repeat(","||trim(left(lafreq)), &lalleles-2);
67           call symput("lqs",trim(left(lqs)));
3                                                          The SAS System                           10:29 Tuesday, February 14, 2017

68         run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      66:17   66:49   
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69         
70         %put lqs=&lqs;
lqs=0.1666666667,0.1666666667,0.1666666667,0.1666666667,0.1666666667,0.1666666667
71         
72         *-----------------------------------------------------------------------------------------------------------;
73         * Macro LINK:                                                                                               ;
74         * Purpose:  Generate Linkage Dataset (Nuclear Families, Quantitative Pheno, Disease Gene and Marker)        ;
75         *-----------------------------------------------------------------------------------------------------------;
76         
77         %macro link;
78         
79             title2 "theta=&theta mudaa=&mudaa mudab=&mudab mudbb=&mudbb dq=&dq de=&de lalleles=&lalleles nfams=&nfams
79       ! mkids=&mkids seed=&seed";
80         
81             *--------------------------------------------------------;
82             * Generate &nfams Nuclear Families: F, M, 1, ..., &mkids.;
83             * One record/pedid                                       ;
84             *--------------------------------------------------------;
85             data families;
86               seed=&seed;
87               dq=&dq;  * disease-risk allele freq of disease gene;
88               dp=1-dq; * normal-risk allele freq of disease gene;
89               de=&de;
90         
91               *-------------------------------------------;
92               * Disease Genotype, phenotype and haplotypes;
93               *-------------------------------------------;
94         
95               array dgene{*} dgf dgm dg1-dg&mkids;
96               array phenos{*} pf  pm  p1 -p&mkids;
97         
98               array mud{3} _temporary_ (&mudaa &mudab &mudbb);
99         
100              *------------------------------------------------------------------;
101              * Two alleles (blue from father, pink from mother) for Disease Gene;
102              *------------------------------------------------------------------;
103              array blue_dallele{*} blue_daf blue_dam blue_da1-blue_da&mkids;
104              array pink_dallele{*} pink_daf pink_dam pink_da1-pink_da&mkids;
105        
106              *--------------------------------------------------------------------;
107              * Two alleles (blue from father, pink from mother) for Linkage Marker;
108              *--------------------------------------------------------------------;
109              array blue_lallele{*} blue_laf blue_lam blue_la1-blue_la&mkids;
110              array pink_lallele{*} pink_laf pink_lam pink_la1-pink_la&mkids;
111        
112              *--------------------;
113              * Generate each pedid;
114              *--------------------;
115              do j=1 to &nfams;
4                                                          The SAS System                           10:29 Tuesday, February 14, 2017

116        
117                pedid=j;
118        
119                do i=1 to &mkids+2;
120        
121                  if i<=2 then do;
122                    *-------------------------------------------------------------------;
123                    * First generate Parents (founders) Genotypes--assume RANDOM mating ;
124                    *-------------------------------------------------------------------;
125        
126                    *---------------------------------------------------------;
127                    * Generate Disease Genotypes by drawing alleles (randomly);
128                    *---------------------------------------------------------;
129                    call rantbl(seed, dp, dq, blue_dallele{i});
130                    call rantbl(seed, dp, dq, pink_dallele{i});
131        
132                    *-------------------------------------------;
133                    * Generate Linkage Marker Alleles (randomly);
134                    *-------------------------------------------;
135                    call rantbl(seed, &lqs, blue_lallele{i});
136                    call rantbl(seed, &lqs, pink_lallele{i});
137        
138                  end;
139                  else do;
140                    *----------------------------------------------------------;
141                    * Now generate Kids Genotypes from parents (dropping genes);
142                    *----------------------------------------------------------;
143        
144                    *------------------------------------------------------------------------------------------------------------
144      ! -----;
145                    * Randomly choose whether father gives his Blue or Pink allele to each kid (this will be kids Blue allele)
145      !      ;
146                    * But you must do this for both the disease and linkage markers simultaneously, because they are linked by
146      ! &theta ;
147                    *------------------------------------------------------------------------------------------------------------
147      ! -----;
148        
149                    call ranuni(seed, xr1);
150                    blue_recomb=(xr1 < &theta);
151                    call ranuni(seed, x1);
152        
153                    if (x1<0.5) then do;
154                      blue_dallele{i} = blue_dallele{1};
155                      if blue_recomb then blue_lallele{i} = pink_lallele{1};
156                      else                blue_lallele{i} = blue_lallele{1};
157                    end;
158                    else do;
159                      blue_dallele{i} = pink_dallele{1};
160                      if blue_recomb then blue_lallele{i} = blue_lallele{1};
161                      else                blue_lallele{i} = pink_lallele{1};
162                    end;
163        
164                    *----------------------------------------;
165                    * Same for mother (pick kids Pink allele);
166                    *----------------------------------------;
167        
168                    call ranuni(seed, xr2);
169                    pink_recomb=(xr2 < &theta);
5                                                          The SAS System                           10:29 Tuesday, February 14, 2017

170                    call ranuni(seed, x2);
171        
172                    if (x2<0.5) then do;
173                      pink_dallele{i} = blue_dallele{2};
174                      if pink_recomb then pink_lallele{i} = pink_lallele{2};
175                      else                pink_lallele{i} = blue_lallele{2};
176                    end;
177                    else do;
178                      pink_dallele{i} = pink_dallele{2};
179                      if pink_recomb then pink_lallele{i} = blue_lallele{2};
180                      else                pink_lallele{i} = pink_lallele{2};
181                    end;
182                  end;
183        
184                  *-----------------------------------------------------------------------------------------;
185                  * Disease genotype index: 1=1/1, 2=1/2, 3=2/2, to feed into MUD{} array of genotypic means;
186                  *-----------------------------------------------------------------------------------------;
187                  dgene{i} = blue_dallele{i} + pink_dallele{i} - 1;
188        
189                  *-------------------------------------------------------------------;
190                  * Generate Phenotype from Disease Genotype for each person in family;
191                  *-------------------------------------------------------------------;
192                  call rannor(seed,x);
193                  phenos{i} = mud{dgene{i}} + de * x;
194        
195                end;
196        
197                *-------------------------;
198                * Output record (1/family);
199                *-------------------------;
200                output;
201              end;
202        
203              *--------------------------------;
204              * Output last SEED for later use ;
205              *--------------------------------;
206              call symput('seed',trim(left(seed)));
207              retain seed;
208              drop i j;
209            run;
210        
211        
212            proc print data=families(obs=10); title3 'Families'; run;
213        
214        
215            *------------------------------------------;
216            * Now convert from Families to Individuals ;
217            *------------------------------------------;
218            data individs;
219              set families;
220        
221              *--------------------------------------------------------;
222              * Copy the arrays defined before (above, in families dsn);
223              *--------------------------------------------------------;
224              array blue_dallele{*} blue_daf blue_dam blue_da1-blue_da&mkids;
225              array pink_dallele{*} pink_daf pink_dam pink_da1-pink_da&mkids;
226        
227              array blue_lallele{*} blue_laf blue_lam blue_la1-blue_la&mkids;
6                                                          The SAS System                           10:29 Tuesday, February 14, 2017

228              array pink_lallele{*} pink_laf pink_lam pink_la1-pink_la&mkids;
229        
230              length cdgf cdgm cdg1-cdg&mkids $10;
231              length clgf clgm clg1-clg&mkids $10;
232        
233              array cdgeno{*} cdgf cdgm cdg1-cdg&mkids;
234              array clgeno{*} clgf clgm clg1-clg&mkids;
235        
236              array phenos{*} pf  pm  p1-p&mkids;
237        
238              do i=1 to &mkids+2;
239                *----------------------------------------------------------------------------;
240                * Convert the two numeric alleles into the character "x/y" genotype notation ;
241                * for each of the disease gene and the linkage marker                        ;
242                *----------------------------------------------------------------------------;
243                cdgeno{i} = trim(left( min(of blue_dallele{i} pink_dallele{i}) ))||'/'||trim(left( max(of blue_dallele{i}
243      ! pink_dallele{i}) ));
244                clgeno{i} = trim(left( min(of blue_lallele{i} pink_lallele{i}) ))||'/'||trim(left( max(of blue_lallele{i}
244      ! pink_lallele{i}) ));
245                dgeno=cdgeno{i};
246                lgeno=clgeno{i};
247                QTp=phenos{i};
248                QLp=(dgeno='2/2');
249        
250        
251                output;
252              end;
253             run;
254        
255             proc print data=individs; title3 'individs';
256             run;
257             proc export data=individs
258             outfile="/home/ramua/project/linksim/linkdata.csv";
259             run;
260        
261        
262            data alleles;
263              set families;
264        
265              *--------------------------------------------------------;
266              * Copy the arrays defined before (above, in families dsn);
267              *--------------------------------------------------------;
268              array blue_dallele{*} blue_daf blue_dam blue_da1-blue_da&mkids;
269              array pink_dallele{*} pink_daf pink_dam pink_da1-pink_da&mkids;
270        
271              array blue_lallele{*} blue_laf blue_lam blue_la1-blue_la&mkids;
272              array pink_lallele{*} pink_laf pink_lam pink_la1-pink_la&mkids;
273        
274              do i=1 to &mkids+2;
275                *----------------------------------------------------------------------;
276                * Output the two alleles (keeping the entire haplotype in the same obs);
277                *----------------------------------------------------------------------;
278                dallele = blue_dallele{i};
279                lallele = blue_lallele{i};
280                output;
281        
282                dallele = pink_dallele{i};
283                lallele = pink_lallele{i};
7                                                          The SAS System                           10:29 Tuesday, February 14, 2017

284                output;
285              end;
286             run;
287        
288             proc sort data=alleles; by i;
289        ;
290             OA
291             *------------------------------;
292             * Run simple Stat Analyses     ;
293             *------------------------------;
294        
295             title3 'Is Disease Genotype Associated with Phenotype?';
296        
297             title4 'Histogram of QT PHENO';
298             proc univariate data=individs plot;
299              var QTp;
300             run;
301        
302             proc univariate data=individs plot;
303              class dgeno;
304              var QTp;
305             run;
306        
307             proc sort data=individs; by i pedid;
308        
309        
310             title4 'GLM on Entire Dataset (ignoring family memberships)';
311             proc glm data=individs;
312               class dgeno;
313               model QTp=dgeno;
314             run;
315        
316             title4 'GLM on each member of Family';
317             proc glm data=individs; by i;
318               class dgeno;
319               model QTp=dgeno;
320             run;
321        
322             title4 'Mixed Model on Entire Dataset, accounting for Family memberships';
323             proc mixed data=individs;
324               class dgeno pedid;
325               model QTp=dgeno;
326               repeated  /subject=pedid type=un;
327             run;
328        
329        
330        
331        
332             title3 'Is Linkage Genotype Associated with Phenotype?';
333             title4 'GLM on Entire Dataset (ignoring family memberships)';
334             proc glm data=individs;
335               class lgeno;
336               model QTp=lgeno;
337             run;
338        
339             title4 'GLM on each member of Family';
340             proc glm data=individs; by i;
341               class lgeno;
8                                                          The SAS System                           10:29 Tuesday, February 14, 2017

342               model QTp=lgeno;
343             run;
344        
345        
346             title4 'Mixed Model on Entire Dataset, accounting for Family memberships';
347             proc mixed data=individs;
348               class lgeno pedid;
349               model QTp=lgeno;
350               repeated  /subject=pedid type=un;
351             run;
352        
353        
354        
355        
356             title3 'Are the Disease Gene and Linkage Marker associated?';
357        
358             title4 'Contingency Table on Genotypes (ignoring family relationships)';
359             proc freq data=individs;
360               tables dgeno*lgeno/chisq;
361             run;
362        
363             title4 'Contingency Table on Alleles (ignoring family memberships)';
364             proc freq data=alleles;
365               tables dallele*lallele/chisq;
366             run;
367        
368             title4 'Contingency Table on each member of Family';
369             proc freq data=alleles; by i;
370               tables dallele*lallele/chisq;
371             run;
372        
373             data alleles; set alleles;
374               Y = dallele - 1;  * Y=0 or 1 indicating disease allele;
375             run;
376        
377             proc GLIMMIX data = alleles;
378               class pedid lallele;
379               model Y(event=last) = lallele / dist=BINARY S OR;
380               random _residual_ / subject=pedid type=un;
381               nloptions tech=none;
382             run;
383        
384        %mend link;
385        
386        %link;
MLOGIC(LINK):  Beginning execution.
MPRINT(LINK):   title2 "theta=0.1 mudaa=-0.6 mudab=0.0 mudbb=0.8 dq=0.4 de=0.1 lalleles=6 nfams=100 mkids=0 seed=12345";
MPRINT(LINK):   *--------------------------------------------------------;
MPRINT(LINK):   * Generate &nfams Nuclear Families: F, M, 1, ..., &mkids.;
MPRINT(LINK):   * One record/pedid ;
MPRINT(LINK):   *--------------------------------------------------------;
MPRINT(LINK):   data families;
MPRINT(LINK):   seed=12345;
MPRINT(LINK):   dq=0.4;
MPRINT(LINK):   * disease-risk allele freq of disease gene;
MPRINT(LINK):   dp=1-dq;
MPRINT(LINK):   * normal-risk allele freq of disease gene;
MPRINT(LINK):   de=0.1;
9                                                          The SAS System                           10:29 Tuesday, February 14, 2017

MPRINT(LINK):   *-------------------------------------------;
MPRINT(LINK):   * Disease Genotype, phenotype and haplotypes;
MPRINT(LINK):   *-------------------------------------------;
MPRINT(LINK):   array dgene{*} dgf dgm dg1-dg0;
MPRINT(LINK):   array phenos{*} pf pm p1 -p0;
MPRINT(LINK):   array mud{3} _temporary_ (-0.6 0.0 0.8);
MPRINT(LINK):   *------------------------------------------------------------------;
MPRINT(LINK):   * Two alleles (blue from father, pink from mother) for Disease Gene;
MPRINT(LINK):   *------------------------------------------------------------------;
MPRINT(LINK):   array blue_dallele{*} blue_daf blue_dam blue_da1-blue_da0;
MPRINT(LINK):   array pink_dallele{*} pink_daf pink_dam pink_da1-pink_da0;
MPRINT(LINK):   *--------------------------------------------------------------------;
MPRINT(LINK):   * Two alleles (blue from father, pink from mother) for Linkage Marker;
MPRINT(LINK):   *--------------------------------------------------------------------;
MPRINT(LINK):   array blue_lallele{*} blue_laf blue_lam blue_la1-blue_la0;
MPRINT(LINK):   array pink_lallele{*} pink_laf pink_lam pink_la1-pink_la0;
MPRINT(LINK):   *--------------------;
MPRINT(LINK):   * Generate each pedid;
MPRINT(LINK):   *--------------------;
MPRINT(LINK):   do j=1 to 100;
MPRINT(LINK):   pedid=j;
MPRINT(LINK):   do i=1 to 0+2;
MPRINT(LINK):   if i<=2 then do;
MPRINT(LINK):   *-------------------------------------------------------------------;
MPRINT(LINK):   * First generate Parents (founders) Genotypes--assume RANDOM mating ;
MPRINT(LINK):   *-------------------------------------------------------------------;
MPRINT(LINK):   *---------------------------------------------------------;
MPRINT(LINK):   * Generate Disease Genotypes by drawing alleles (randomly);
MPRINT(LINK):   *---------------------------------------------------------;
MPRINT(LINK):   call rantbl(seed, dp, dq, blue_dallele{i});
MPRINT(LINK):   call rantbl(seed, dp, dq, pink_dallele{i});
MPRINT(LINK):   *-------------------------------------------;
MPRINT(LINK):   * Generate Linkage Marker Alleles (randomly);
MPRINT(LINK):   *-------------------------------------------;
MPRINT(LINK):   call rantbl(seed, 0.1666666667,0.1666666667,0.1666666667,0.1666666667,0.1666666667,0.1666666667, blue_lallele{i});
MPRINT(LINK):   call rantbl(seed, 0.1666666667,0.1666666667,0.1666666667,0.1666666667,0.1666666667,0.1666666667, pink_lallele{i});
MPRINT(LINK):   end;
MPRINT(LINK):   else do;
MPRINT(LINK):   *----------------------------------------------------------;
MPRINT(LINK):   * Now generate Kids Genotypes from parents (dropping genes);
MPRINT(LINK):   *----------------------------------------------------------;
MPRINT(LINK):   *-----------------------------------------------------------------------------------------------------------------;
MPRINT(LINK):   * Randomly choose whether father gives his Blue or Pink allele to each kid (this will be kids Blue allele) ;
MPRINT(LINK):   * But you must do this for both the disease and linkage markers simultaneously, because they are linked by &theta ;
MPRINT(LINK):   *-----------------------------------------------------------------------------------------------------------------;
MPRINT(LINK):   call ranuni(seed, xr1);
MPRINT(LINK):   blue_recomb=(xr1 < 0.1);
MPRINT(LINK):   call ranuni(seed, x1);
MPRINT(LINK):   if (x1<0.5) then do;
MPRINT(LINK):   blue_dallele{i} = blue_dallele{1};
MPRINT(LINK):   if blue_recomb then blue_lallele{i} = pink_lallele{1};
MPRINT(LINK):   else blue_lallele{i} = blue_lallele{1};
MPRINT(LINK):   end;
MPRINT(LINK):   else do;
MPRINT(LINK):   blue_dallele{i} = pink_dallele{1};
MPRINT(LINK):   if blue_recomb then blue_lallele{i} = blue_lallele{1};
MPRINT(LINK):   else blue_lallele{i} = pink_lallele{1};
MPRINT(LINK):   end;
10                                                         The SAS System                           10:29 Tuesday, February 14, 2017

MPRINT(LINK):   *----------------------------------------;
MPRINT(LINK):   * Same for mother (pick kids Pink allele);
MPRINT(LINK):   *----------------------------------------;
MPRINT(LINK):   call ranuni(seed, xr2);
MPRINT(LINK):   pink_recomb=(xr2 < 0.1);
MPRINT(LINK):   call ranuni(seed, x2);
MPRINT(LINK):   if (x2<0.5) then do;
MPRINT(LINK):   pink_dallele{i} = blue_dallele{2};
MPRINT(LINK):   if pink_recomb then pink_lallele{i} = pink_lallele{2};
MPRINT(LINK):   else pink_lallele{i} = blue_lallele{2};
MPRINT(LINK):   end;
MPRINT(LINK):   else do;
MPRINT(LINK):   pink_dallele{i} = pink_dallele{2};
MPRINT(LINK):   if pink_recomb then pink_lallele{i} = blue_lallele{2};
MPRINT(LINK):   else pink_lallele{i} = pink_lallele{2};
MPRINT(LINK):   end;
MPRINT(LINK):   end;
MPRINT(LINK):   *-----------------------------------------------------------------------------------------;
MPRINT(LINK):   * Disease genotype index: 1=1/1, 2=1/2, 3=2/2, to feed into MUD{} array of genotypic means;
MPRINT(LINK):   *-----------------------------------------------------------------------------------------;
MPRINT(LINK):   dgene{i} = blue_dallele{i} + pink_dallele{i} - 1;
MPRINT(LINK):   *-------------------------------------------------------------------;
MPRINT(LINK):   * Generate Phenotype from Disease Genotype for each person in family;
MPRINT(LINK):   *-------------------------------------------------------------------;
MPRINT(LINK):   call rannor(seed,x);
MPRINT(LINK):   phenos{i} = mud{dgene{i}} + de * x;
MPRINT(LINK):   end;
MPRINT(LINK):   *-------------------------;
MPRINT(LINK):   * Output record (1/family);
MPRINT(LINK):   *-------------------------;
MPRINT(LINK):   output;
MPRINT(LINK):   end;
MPRINT(LINK):   *--------------------------------;
MPRINT(LINK):   * Output last SEED for later use ;
MPRINT(LINK):   *--------------------------------;
MPRINT(LINK):   call symput('seed',trim(left(seed)));
MPRINT(LINK):   retain seed;
MPRINT(LINK):   drop i j;
MPRINT(LINK):   run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      386:73   
NOTE: The data set WORK.FAMILIES has 100 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(LINK):   proc print data=families(obs=10);
MPRINT(LINK):   title3 'Families';
MPRINT(LINK):   run;

NOTE: There were 10 observations read from the data set WORK.FAMILIES.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
11                                                         The SAS System                           10:29 Tuesday, February 14, 2017


MPRINT(LINK):   *------------------------------------------;
MPRINT(LINK):   * Now convert from Families to Individuals ;
MPRINT(LINK):   *------------------------------------------;
MPRINT(LINK):   data individs;
MPRINT(LINK):   set families;
MPRINT(LINK):   *--------------------------------------------------------;
MPRINT(LINK):   * Copy the arrays defined before (above, in families dsn);
MPRINT(LINK):   *--------------------------------------------------------;
MPRINT(LINK):   array blue_dallele{*} blue_daf blue_dam blue_da1-blue_da0;
MPRINT(LINK):   array pink_dallele{*} pink_daf pink_dam pink_da1-pink_da0;
MPRINT(LINK):   array blue_lallele{*} blue_laf blue_lam blue_la1-blue_la0;
MPRINT(LINK):   array pink_lallele{*} pink_laf pink_lam pink_la1-pink_la0;
MPRINT(LINK):   length cdgf cdgm cdg1-cdg0 $10;
MPRINT(LINK):   length clgf clgm clg1-clg0 $10;
MPRINT(LINK):   array cdgeno{*} cdgf cdgm cdg1-cdg0;
MPRINT(LINK):   array clgeno{*} clgf clgm clg1-clg0;
MPRINT(LINK):   array phenos{*} pf pm p1-p0;
MPRINT(LINK):   do i=1 to 0+2;
MPRINT(LINK):   *----------------------------------------------------------------------------;
MPRINT(LINK):   * Convert the two numeric alleles into the character "x/y" genotype notation ;
MPRINT(LINK):   * for each of the disease gene and the linkage marker ;
MPRINT(LINK):   *----------------------------------------------------------------------------;
MPRINT(LINK):   cdgeno{i} = trim(left( min(of blue_dallele{i} pink_dallele{i}) ))||'/'||trim(left( max(of blue_dallele{i} 
pink_dallele{i}) ));
MPRINT(LINK):   clgeno{i} = trim(left( min(of blue_lallele{i} pink_lallele{i}) ))||'/'||trim(left( max(of blue_lallele{i} 
pink_lallele{i}) ));
MPRINT(LINK):   dgeno=cdgeno{i};
MPRINT(LINK):   lgeno=clgeno{i};
MPRINT(LINK):   QTp=phenos{i};
MPRINT(LINK):   QLp=(dgeno='2/2');
MPRINT(LINK):   output;
MPRINT(LINK):   end;
MPRINT(LINK):   run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      386:33    386:93    386:168   386:228   
NOTE: There were 100 observations read from the data set WORK.FAMILIES.
NOTE: The data set WORK.INDIVIDS has 200 observations and 49 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   proc print data=individs;
MPRINT(LINK):   title3 'individs';
MPRINT(LINK):   run;

NOTE: There were 200 observations read from the data set WORK.INDIVIDS.
NOTE: The PROCEDURE PRINT printed pages 2-15.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(LINK):   proc export data=individs outfile="/home/ramua/project/linksim/linkdata.csv";
MPRINT(LINK):   ADLM;
MPRINT(LINK):   run;
12                                                         The SAS System                           10:29 Tuesday, February 14, 2017


387         /**********************************************************************
388         *   PRODUCT:   SAS
389         *   VERSION:   9.4
390         *   CREATOR:   External File Interface
391         *   DATE:      14FEB17
392         *   DESC:      Generated SAS Datastep Code
393         *   TEMPLATE SOURCE:  (None Specified.)
394         ***********************************************************************/
395            data _null_;
MPRINT(LINK):   data _null_;
396            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
397            %let _EFIREC_ = 0;     /* clear export record count macro variable */
398            file '/home/ramua/project/linksim/linkdata.csv' delimiter=',' DSD DROPOVER lrecl=32767;
MPRINT(LINK):   file '/home/ramua/project/linksim/linkdata.csv' delimiter=',' DSD DROPOVER lrecl=32767;
399            if _n_ = 1 then        /* write column names or labels */
400             do;
MPRINT(LINK):   if _n_ = 1 then do;
401               put
402                  "seed"
403               ','
404                  "dq"
405               ','
406                  "dp"
407               ','
408                  "de"
409               ','
410                  "dgf"
411               ','
412                  "dgm"
413               ','
414                  "dg1"
415               ','
416                  "dg0"
417               ','
418                  "pf"
419               ','
420                  "pm"
421               ','
422                  "p1"
423               ','
424                  "p0"
425               ','
426                  "blue_daf"
427               ','
428                  "blue_dam"
429               ','
430                  "blue_da1"
431               ','
432                  "blue_da0"
433               ','
434                  "pink_daf"
435               ','
436                  "pink_dam"
437               ','
438                  "pink_da1"
439               ','
440                  "pink_da0"
13                                                         The SAS System                           10:29 Tuesday, February 14, 2017

441               ','
442                  "blue_laf"
443               ','
444                  "blue_lam"
445               ','
446                  "blue_la1"
447               ','
448                  "blue_la0"
449               ','
450                  "pink_laf"
451               ','
452                  "pink_lam"
453               ','
454                  "pink_la1"
455               ','
456                  "pink_la0"
457               ','
458                  "pedid"
459               ','
460                  "xr1"
461               ','
462                  "blue_recomb"
463               ','
464                  "x1"
465               ','
466                  "xr2"
467               ','
468                  "pink_recomb"
469               ','
470                  "x2"
471               ','
472                  "x"
473               ','
474                  "cdgf"
475               ','
476                  "cdgm"
477               ','
478                  "cdg1"
479               ','
480                  "cdg0"
481               ','
482                  "clgf"
483               ','
484                  "clgm"
485               ','
486                  "clg1"
487               ','
488                  "clg0"
489               ','
490                  "i"
491               ','
492                  "dgeno"
493               ','
494                  "lgeno"
495               ','
496                  "QTp"
497               ','
498                  "QLp"
14                                                         The SAS System                           10:29 Tuesday, February 14, 2017

499               ;
MPRINT(LINK):   put "seed" ',' "dq" ',' "dp" ',' "de" ',' "dgf" ',' "dgm" ',' "dg1" ',' "dg0" ',' "pf" ',' "pm" ',' "p1" ',' "p0" 
',' "blue_daf" ',' "blue_dam" ',' "blue_da1" ',' "blue_da0" ',' "pink_daf" ',' "pink_dam" ',' "pink_da1" ',' "pink_da0" ',' 
"blue_laf" ',' "blue_lam" ',' "blue_la1" ',' "blue_la0" ',' "pink_laf" ',' "pink_lam" ',' "pink_la1" ',' "pink_la0" ',' "pedid" ',' 
"xr1" ',' "blue_recomb" ',' "x1" ',' "xr2" ',' "pink_recomb" ',' "x2" ',' "x" ',' "cdgf" ',' "cdgm" ',' "cdg1" ',' "cdg0" ',' 
"clgf" ',' "clgm" ',' "clg1" ',' "clg0" ',' "i" ',' "dgeno" ',' "lgeno" ',' "QTp" ',' "QLp" ;
500             end;
MPRINT(LINK):   end;
501           set  INDIVIDS   end=EFIEOD;
MPRINT(LINK):   set INDIVIDS end=EFIEOD;
502               format seed best12. ;
MPRINT(LINK):   format seed best12. ;
503               format dq best12. ;
MPRINT(LINK):   format dq best12. ;
504               format dp best12. ;
MPRINT(LINK):   format dp best12. ;
505               format de best12. ;
MPRINT(LINK):   format de best12. ;
506               format dgf best12. ;
MPRINT(LINK):   format dgf best12. ;
507               format dgm best12. ;
MPRINT(LINK):   format dgm best12. ;
508               format dg1 best12. ;
MPRINT(LINK):   format dg1 best12. ;
509               format dg0 best12. ;
MPRINT(LINK):   format dg0 best12. ;
510               format pf best12. ;
MPRINT(LINK):   format pf best12. ;
511               format pm best12. ;
MPRINT(LINK):   format pm best12. ;
512               format p1 best12. ;
MPRINT(LINK):   format p1 best12. ;
513               format p0 best12. ;
MPRINT(LINK):   format p0 best12. ;
514               format blue_daf best12. ;
MPRINT(LINK):   format blue_daf best12. ;
515               format blue_dam best12. ;
MPRINT(LINK):   format blue_dam best12. ;
516               format blue_da1 best12. ;
MPRINT(LINK):   format blue_da1 best12. ;
517               format blue_da0 best12. ;
MPRINT(LINK):   format blue_da0 best12. ;
518               format pink_daf best12. ;
MPRINT(LINK):   format pink_daf best12. ;
519               format pink_dam best12. ;
MPRINT(LINK):   format pink_dam best12. ;
520               format pink_da1 best12. ;
MPRINT(LINK):   format pink_da1 best12. ;
521               format pink_da0 best12. ;
MPRINT(LINK):   format pink_da0 best12. ;
522               format blue_laf best12. ;
MPRINT(LINK):   format blue_laf best12. ;
523               format blue_lam best12. ;
MPRINT(LINK):   format blue_lam best12. ;
524               format blue_la1 best12. ;
MPRINT(LINK):   format blue_la1 best12. ;
525               format blue_la0 best12. ;
MPRINT(LINK):   format blue_la0 best12. ;
15                                                         The SAS System                           10:29 Tuesday, February 14, 2017

526               format pink_laf best12. ;
MPRINT(LINK):   format pink_laf best12. ;
527               format pink_lam best12. ;
MPRINT(LINK):   format pink_lam best12. ;
528               format pink_la1 best12. ;
MPRINT(LINK):   format pink_la1 best12. ;
529               format pink_la0 best12. ;
MPRINT(LINK):   format pink_la0 best12. ;
530               format pedid best12. ;
MPRINT(LINK):   format pedid best12. ;
531               format xr1 best12. ;
MPRINT(LINK):   format xr1 best12. ;
532               format blue_recomb best12. ;
MPRINT(LINK):   format blue_recomb best12. ;
533               format x1 best12. ;
MPRINT(LINK):   format x1 best12. ;
534               format xr2 best12. ;
MPRINT(LINK):   format xr2 best12. ;
535               format pink_recomb best12. ;
MPRINT(LINK):   format pink_recomb best12. ;
536               format x2 best12. ;
MPRINT(LINK):   format x2 best12. ;
537               format x best12. ;
MPRINT(LINK):   format x best12. ;
538               format cdgf $10. ;
MPRINT(LINK):   format cdgf $10. ;
539               format cdgm $10. ;
MPRINT(LINK):   format cdgm $10. ;
540               format cdg1 $10. ;
MPRINT(LINK):   format cdg1 $10. ;
541               format cdg0 $10. ;
MPRINT(LINK):   format cdg0 $10. ;
542               format clgf $10. ;
MPRINT(LINK):   format clgf $10. ;
543               format clgm $10. ;
MPRINT(LINK):   format clgm $10. ;
544               format clg1 $10. ;
MPRINT(LINK):   format clg1 $10. ;
545               format clg0 $10. ;
MPRINT(LINK):   format clg0 $10. ;
546               format i best12. ;
MPRINT(LINK):   format i best12. ;
547               format dgeno $10. ;
MPRINT(LINK):   format dgeno $10. ;
548               format lgeno $10. ;
MPRINT(LINK):   format lgeno $10. ;
549               format QTp best12. ;
MPRINT(LINK):   format QTp best12. ;
550               format QLp best12. ;
MPRINT(LINK):   format QLp best12. ;
551             do;
MPRINT(LINK):   do;
552               EFIOUT + 1;
MPRINT(LINK):   EFIOUT + 1;
553               put seed @;
MPRINT(LINK):   put seed @;
554               put dq @;
MPRINT(LINK):   put dq @;
16                                                         The SAS System                           10:29 Tuesday, February 14, 2017

555               put dp @;
MPRINT(LINK):   put dp @;
556               put de @;
MPRINT(LINK):   put de @;
557               put dgf @;
MPRINT(LINK):   put dgf @;
558               put dgm @;
MPRINT(LINK):   put dgm @;
559               put dg1 @;
MPRINT(LINK):   put dg1 @;
560               put dg0 @;
MPRINT(LINK):   put dg0 @;
561               put pf @;
MPRINT(LINK):   put pf @;
562               put pm @;
MPRINT(LINK):   put pm @;
563               put p1 @;
MPRINT(LINK):   put p1 @;
564               put p0 @;
MPRINT(LINK):   put p0 @;
565               put blue_daf @;
MPRINT(LINK):   put blue_daf @;
566               put blue_dam @;
MPRINT(LINK):   put blue_dam @;
567               put blue_da1 @;
MPRINT(LINK):   put blue_da1 @;
568               put blue_da0 @;
MPRINT(LINK):   put blue_da0 @;
569               put pink_daf @;
MPRINT(LINK):   put pink_daf @;
570               put pink_dam @;
MPRINT(LINK):   put pink_dam @;
571               put pink_da1 @;
MPRINT(LINK):   put pink_da1 @;
572               put pink_da0 @;
MPRINT(LINK):   put pink_da0 @;
573               put blue_laf @;
MPRINT(LINK):   put blue_laf @;
574               put blue_lam @;
MPRINT(LINK):   put blue_lam @;
575               put blue_la1 @;
MPRINT(LINK):   put blue_la1 @;
576               put blue_la0 @;
MPRINT(LINK):   put blue_la0 @;
577               put pink_laf @;
MPRINT(LINK):   put pink_laf @;
578               put pink_lam @;
MPRINT(LINK):   put pink_lam @;
579               put pink_la1 @;
MPRINT(LINK):   put pink_la1 @;
580               put pink_la0 @;
MPRINT(LINK):   put pink_la0 @;
581               put pedid @;
MPRINT(LINK):   put pedid @;
582               put xr1 @;
MPRINT(LINK):   put xr1 @;
583               put blue_recomb @;
MPRINT(LINK):   put blue_recomb @;
17                                                         The SAS System                           10:29 Tuesday, February 14, 2017

584               put x1 @;
MPRINT(LINK):   put x1 @;
585               put xr2 @;
MPRINT(LINK):   put xr2 @;
586               put pink_recomb @;
MPRINT(LINK):   put pink_recomb @;
587               put x2 @;
MPRINT(LINK):   put x2 @;
588               put x @;
MPRINT(LINK):   put x @;
589               put cdgf $ @;
MPRINT(LINK):   put cdgf $ @;
590               put cdgm $ @;
MPRINT(LINK):   put cdgm $ @;
591               put cdg1 $ @;
MPRINT(LINK):   put cdg1 $ @;
592               put cdg0 $ @;
MPRINT(LINK):   put cdg0 $ @;
593               put clgf $ @;
MPRINT(LINK):   put clgf $ @;
594               put clgm $ @;
MPRINT(LINK):   put clgm $ @;
595               put clg1 $ @;
MPRINT(LINK):   put clg1 $ @;
596               put clg0 $ @;
MPRINT(LINK):   put clg0 $ @;
597               put i @;
MPRINT(LINK):   put i @;
598               put dgeno $ @;
MPRINT(LINK):   put dgeno $ @;
599               put lgeno $ @;
MPRINT(LINK):   put lgeno $ @;
600               put QTp @;
MPRINT(LINK):   put QTp @;
601               put QLp ;
MPRINT(LINK):   put QLp ;
602               ;
MPRINT(LINK):   ;
603             end;
MPRINT(LINK):   end;
604            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
MPRINT(LINK):   if _ERROR_ then call symputx('_EFIERR_',1);
605            if EFIEOD then call symputx('_EFIREC_',EFIOUT);
MPRINT(LINK):   if EFIEOD then call symputx('_EFIREC_',EFIOUT);
606            run;
MPRINT(LINK):   run;

NOTE: The file '/home/ramua/project/linksim/linkdata.csv' is:
      Filename=/home/ramua/project/linksim/linkdata.csv,
      Owner Name=ramua,Group Name=ramua,
      Access Permission=-rw-rw----,
      Last Modified=14Feb2017:10:29:02

NOTE: 201 records were written to the file '/home/ramua/project/linksim/linkdata.csv'.
      The minimum record length was 136.
      The maximum record length was 293.
NOTE: There were 200 observations read from the data set WORK.INDIVIDS.
NOTE: DATA statement used (Total process time):
18                                                         The SAS System                           10:29 Tuesday, February 14, 2017

      real time           0.01 seconds
      cpu time            0.01 seconds
      

200 records created in /home/ramua/project/linksim/linkdata.csv from INDIVIDS.
  
  
NOTE: "/home/ramua/project/linksim/linkdata.csv" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

MPRINT(LINK):    ;
MPRINT(LINK):   data alleles;
MPRINT(LINK):   set families;
MPRINT(LINK):   *--------------------------------------------------------;
MPRINT(LINK):   * Copy the arrays defined before (above, in families dsn);
MPRINT(LINK):   *--------------------------------------------------------;
MPRINT(LINK):   array blue_dallele{*} blue_daf blue_dam blue_da1-blue_da0;
MPRINT(LINK):   array pink_dallele{*} pink_daf pink_dam pink_da1-pink_da0;
MPRINT(LINK):   array blue_lallele{*} blue_laf blue_lam blue_la1-blue_la0;
MPRINT(LINK):   array pink_lallele{*} pink_laf pink_lam pink_la1-pink_la0;
MPRINT(LINK):   do i=1 to 0+2;
MPRINT(LINK):   *----------------------------------------------------------------------;
MPRINT(LINK):   * Output the two alleles (keeping the entire haplotype in the same obs);
MPRINT(LINK):   *----------------------------------------------------------------------;
MPRINT(LINK):   dallele = blue_dallele{i};
MPRINT(LINK):   lallele = blue_lallele{i};
MPRINT(LINK):   output;
MPRINT(LINK):   dallele = pink_dallele{i};
MPRINT(LINK):   lallele = pink_lallele{i};
MPRINT(LINK):   output;
MPRINT(LINK):   end;
MPRINT(LINK):   run;

NOTE: There were 100 observations read from the data set WORK.FAMILIES.
NOTE: The data set WORK.ALLELES has 400 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   proc sort data=alleles;
MPRINT(LINK):   by i;
MPRINT(LINK):   ;
NOTE: Line generated by the invoked macro "LINK".
606                 dallele = blue_dallele{i};         lallele = blue_lallele{i};         output;          dallele = pink_dallele{i}
606      ! ;         lallele = pink_lallele{i};         output;       end;      run;       proc sort data=alleles; by i; ;      OA
                                                                                                                                _
                                                                                                                                217
ERROR 217-322: Invalid statement due to first character being unprintable (hexadecimal representation: 1B).

MPRINT(LINK):   OA *------------------------------;
MPRINT(LINK):   * Run simple Stat Analyses ;
MPRINT(LINK):   *------------------------------;
MPRINT(LINK):   title3 'Is Disease Genotype Associated with Phenotype?';
MPRINT(LINK):   title4 'Histogram of QT PHENO';
19                                                         The SAS System                           10:29 Tuesday, February 14, 2017


NOTE: The SAS System stopped processing this step because of errors.
NOTE: SAS set option OBS=0 and will continue to check statements. This might cause NOTE: No observations in data set.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(LINK):   proc univariate data=individs plot;
MPRINT(LINK):   var QTp;
MPRINT(LINK):   run;

NOTE: PROCEDURE UNIVARIATE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   proc univariate data=individs plot;
MPRINT(LINK):   class dgeno;
MPRINT(LINK):   var QTp;
MPRINT(LINK):   run;

NOTE: PROCEDURE UNIVARIATE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   proc sort data=individs;
MPRINT(LINK):   by i pedid;
MPRINT(LINK):   title4 'GLM on Entire Dataset (ignoring family memberships)';

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   proc glm data=individs;
MPRINT(LINK):   class dgeno;
MPRINT(LINK):   model QTp=dgeno;
MPRINT(LINK):   run;

WARNING: RUN statement ignored due to previous errors. Submit QUIT; to terminate the procedure.
MPRINT(LINK):   title4 'GLM on each member of Family';

NOTE: PROCEDURE GLM used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   proc glm data=individs;
MPRINT(LINK):   by i;
MPRINT(LINK):   class dgeno;
MPRINT(LINK):   model QTp=dgeno;
MPRINT(LINK):   run;

WARNING: RUN statement ignored due to previous errors. Submit QUIT; to terminate the procedure.
MPRINT(LINK):   title4 'Mixed Model on Entire Dataset, accounting for Family memberships';
20                                                         The SAS System                           10:29 Tuesday, February 14, 2017


NOTE: PROCEDURE GLM used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE MIXED used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
MPRINT(LINK):   proc mixed data=individs;
NOTE: The SAS System stopped processing this step because of errors.
MPRINT(LINK):   class dgeno pedid;
MPRINT(LINK):   model QTp=dgeno;
MPRINT(LINK):   repeated /subject=pedid type=un;
MPRINT(LINK):   run;
MPRINT(LINK):   title3 'Is Linkage Genotype Associated with Phenotype?';
MPRINT(LINK):   title4 'GLM on Entire Dataset (ignoring family memberships)';


MPRINT(LINK):   proc glm data=individs;
MPRINT(LINK):   class lgeno;
MPRINT(LINK):   model QTp=lgeno;
MPRINT(LINK):   run;

WARNING: RUN statement ignored due to previous errors. Submit QUIT; to terminate the procedure.
MPRINT(LINK):   title4 'GLM on each member of Family';

NOTE: PROCEDURE GLM used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   proc glm data=individs;
MPRINT(LINK):   by i;
MPRINT(LINK):   class lgeno;
MPRINT(LINK):   model QTp=lgeno;
MPRINT(LINK):   run;

WARNING: RUN statement ignored due to previous errors. Submit QUIT; to terminate the procedure.
MPRINT(LINK):   title4 'Mixed Model on Entire Dataset, accounting for Family memberships';

NOTE: PROCEDURE GLM used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE MIXED used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
MPRINT(LINK):   proc mixed data=individs;
NOTE: The SAS System stopped processing this step because of errors.
MPRINT(LINK):   class lgeno pedid;
MPRINT(LINK):   model QTp=lgeno;
MPRINT(LINK):   repeated /subject=pedid type=un;
MPRINT(LINK):   run;
MPRINT(LINK):   title3 'Are the Disease Gene and Linkage Marker associated?';
21                                                         The SAS System                           10:29 Tuesday, February 14, 2017

MPRINT(LINK):   title4 'Contingency Table on Genotypes (ignoring family relationships)';


MPRINT(LINK):   proc freq data=individs;
MPRINT(LINK):   tables dgeno*lgeno/chisq;
MPRINT(LINK):   run;

NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   title4 'Contingency Table on Alleles (ignoring family memberships)';
MPRINT(LINK):   proc freq data=alleles;
MPRINT(LINK):   tables dallele*lallele/chisq;
MPRINT(LINK):   run;

NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   title4 'Contingency Table on each member of Family';
MPRINT(LINK):   proc freq data=alleles;
MPRINT(LINK):   by i;
MPRINT(LINK):   tables dallele*lallele/chisq;
MPRINT(LINK):   run;

NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   data alleles;
MPRINT(LINK):   set alleles;
MPRINT(LINK):   Y = dallele - 1;
MPRINT(LINK):   * Y=0 or 1 indicating disease allele;
MPRINT(LINK):   run;

NOTE: The data set WORK.ALLELES has 0 observations and 40 variables.
WARNING: Data set WORK.ALLELES was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LINK):   proc GLIMMIX data = alleles;
MPRINT(LINK):   class pedid lallele;
MPRINT(LINK):   model Y(event=last) = lallele / dist=BINARY S OR;
MPRINT(LINK):   random _residual_ / subject=pedid type=un;
MPRINT(LINK):   nloptions tech=none;
MPRINT(LINK):   run;

ERROR: Response variable Y is not in the data set and is not defined through programming statements.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE GLIMMIX used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
22                                                         The SAS System                           10:29 Tuesday, February 14, 2017

      
MLOGIC(LINK):  Ending execution.


ERROR: Errors printed on pages 18,21.

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           0.41 seconds
      cpu time            0.27 seconds
      
